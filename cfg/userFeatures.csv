Name,Script
Index,x=1:nEvt
Starting Frame,x=fts.curve.tBegin
Basic - Area,x=fts.basic.area
Basic - Perimeter,x=fts.basic.peri
Basic - Circularity,x=fts.basic.circMetric
Curve - P Value on max Dff (-log10),x=-log10(fts.curve.dffMaxPval)
Curve - Max Dff,x=fts.curve.dffMax
Curve - Duration of visualized event overlay,x=fts.curve.duration
Curve - Duration 50% to 50% based on averge dF/F,x=fts.curve.width55
Curve - Duration 10% to 10% based on averge dF/F,x=fts.curve.width11
Curve - Rising duration 10% to 90% based on averge dF/F,x=fts.curve.rise19
Curve - Decaying duration 90% to 10% based on averge dF/F,x=fts.curve.fall91
Curve - dat AUC,x=fts.curve.datAUC
Curve - dff AUC,x=fts.curve.dffAUC
Curve - Decay tau,x=fts.curve.decayTau
Propagation - onset - overall,"x0=fts.propagation.propGrowOverall; x=sum(x0,2)"
Propagation - onset - one direction,"x0=fts.propagation.propGrowOverall(:,xxDi); x=x0"
Propagation - onset - one direction - ratio,"x0=fts.propagation.propGrowOverall; xAll=sum(x0,2); xSel=x0(:,xxDi); x=xSel./xAll"
Propagation - offset - overall,"x0=fts.propagation.propShrinkOverall; x=sum(abs(x0),2)"
Propagation - offset - one direction,"x0=fts.propagation.propShrinkOverall(:,xxDi); x=abs(x0)"
Propagation - offset - one direction - ratio,"x0=abs(fts.propagation.propShrinkOverall); xAll=sum(x0,2); xSel=x0(:,xxDi); x=xSel./xAll"
Landmark - event average distance,"x=fts.region.landmarkDist.distAvg(:,xxLmk)"
Landmark - event minimum distance,"x=fts.region.landmarkDist.distMin(:,xxLmk)"
Landmark - event toward landmark,"x=fts.region.landmarkDir.chgToward(:,xxLmk)"
Landmark - event away from landmark,"x=fts.region.landmarkDir.chgAway(:,xxLmk)"
Landmark - event toward landmark before reaching,"x=fts.region.landmarkDir.chgTowardBefReach(:,xxLmk)"
Landmark - event away from landmark after reaching,"x=fts.region.landmarkDir.chgAwayAftReach(:,xxLmk)"
Region - event centroid distance to border,"x0=fts.region.cell.dist2border;x=nanmin(x0,[],2)"
Region - event centroid distance to border - normalized by region radius,"x0=fts.region.cell.dist2borderNorm; x=nanmin(x0,[],2)"
Network - number of events in the same location,"x=fts.network.nOccurSameLoc(:,1)"
Network - number of events in the same location with similar size only,"x=fts.network.nOccurSameLoc(:,2)"
Network - maximum number of events appearing at the same time,x=fts.network.nOccurSameTime
